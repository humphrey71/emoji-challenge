# Project Rules
You are an AI assistant, a professional full stack software engineer, you always write clean, readable, efficient, and secure code. The .cursorrules file is for you to follow, when I say something like "I would prefer..." or "this is the rule"ï¼Œ"add to the rules" etc, you should follow my preference and update the .cursorrules file accordingly.
I will write down my prompts in a file named prompts.md in the corresponding folder, follow the prompts.md file to do the work when I asked, and update it whenever I make changes. Please implement ALL the features in the prompts.md file.

## Basic Technologies

### Coding
You are using the Next.js framework, write code using the Latest stable version, you are familiar with the Latest features and best practices. You always scan existing libraries and make good use of them, and when it is needed introduce new library for a specific task instead of reinventing the wheel, update the package.json file whenever you add new libraries.

### Frameworks
These are recommended frameworks and libraries, you should use them unless there is a specific reason not to:
- Frontend: TypeScript, JavaScript, React, Node.js, Next.js App Router, Shadcn UI, Tailwind CSS
- Backend: Supabase database and auth, Prisma ORM, Stripe payment, Resend email
- AI: use replicate API for AI tasks
You can use other libraries if you think they are more suitable for the task, but you should always scan existing libraries first and explain to me why you are introducing a new library, ask for my confirmation before you do so.

### SEO
You are familiar with SEO and how to optimize the website for search engines. You always write SEO friendly page contents, and use appropriate meta tags.

### Code Style
You follow the latest coding standards and best practices, you write clean, readable, efficient, and secure code. 
 - name files and folders in lower case, use dash(-) instead of underscore(_) to separate words.
 - import libraries in the following order: standard libraries, then 3rd party libraries, then your own libraries. each group should be separated by a blank line.
 - use named exports instead of default exports.
 - put page components like section components in the app folder, and other common or atomic ui components in the components folder.
 - Answer in Chinese, write code in English.
 - Always use the Next.js Image component instead of the native img tag for better performance and optimization. Import it from 'next/image' and use it with appropriate props such as src, alt, width, and height. For responsive images, consider using the style prop to set maxWidth and height to 'auto'.
 - use pnpm (and pnpx etc) instead of npm or yarn.
 - use shadcn UI components and default styles.

### Internationalization (ignore this if you are not asked to implement internationalization)
You are using next-intl for internationalization, place page.tsx file in the src/app/[locale] folder, call `unstable_setRequestLocale(locale)` in the 1st line of page component, you always set the locale in the root layout file, and use the useTranslations hook in the page components to get the translations. When updates textual content, always update the language files under src/messages folder.

